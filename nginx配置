
安装位置 /etc/nginx

whereis nginx
nginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man3/nginx.3pm.gz /usr/share/man/man8/nginx.8.gz


ps -ef|grep nginx

kill -QUIT master进程


nginx -c /etc/nginx/nginx.conf


openssl命令生成 证书

cd /etc/nginx

mkdir key

cd key
下命令生成一个key

openssl genrsa -des3 -out ssl.key 1024
然后他会要求你输入这个key文件的密码。不推荐输入。因为以后要给nginx使用。每次reload nginx配置时候都要你验证这个PAM密码的。
由于生成时候必须输入密码。你可以输入后 再删掉。

mv ssl.key xxx.key
openssl rsa -in xxx.key -out ssl.key
rm xxx.key
然后根据这个key文件生成证书请求文件
openssl req -new -key ssl.key -out ssl.csr

最后根据这2个文件(ssl.key ssl.csr)生成crt证书文件

sudo openssl x509 -req -days 3650 -in ssl.csr -signkey ssl.key -out ssl.crt

这里365是证书有效期 推荐3650哈哈。这个大家随意。最后使用到的文件是key和crt文件。

如果需要用pfx 可以用以下命令生成
#                openssl pkcs12 -export -inkey ssl.key -in ssl.crt -out ssl.pfx


#########备件系统测试环境配置#################################################################################

#user  nobody;
worker_processes  1;

events {
    worker_connections  1024;
}

http { 
include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    client_body_buffer_size 256k;
    server_names_hash_bucket_size 64;
    access_log  logs/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  200;
    proxy_connect_timeout 1;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-From-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto  $scheme;
    gzip  on;
	
	add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;


    server {
        listen       8099;
        server_name _ ;

        location / {
            root   /home/jxty/ftp;
            autoindex on;
        }
    }
	
	server {
        listen       80;
        server_name 10.100.2.109;
		rewrite ^(.*)$  https://$host$1 permanent; 
    }
	
	server {
        listen       443;
        server_name 10.100.2.109;
		ssl on;
        ssl_certificate /etc/nginx/key/ssl.crt;
        ssl_certificate_key /etc/nginx/key/ssl.key;
        ssl_session_timeout 5m;
        ssl_protocols SSLv2 SSLv3 TLSv1;
        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://10.100.2.106:9003;
        }
    }
	
	server {
        listen        1443 ssl;
        server_name   10.100.2.109;
        
        ssl_certificate /etc/nginx/key/ssl.crt;
        ssl_certificate_key /etc/nginx/key/ssl.key;
        ssl_session_timeout 5m;
        ssl_protocols SSLv2 SSLv3 TLSv1;
        ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_prefer_server_ciphers on;
        error_page 497 301 https://$http_host$request_uri;
        
        charset UTF8;
        access_log  logs/bj.access.log  main;
        error_log   logs/bj.error.log;
        
        location / {
               proxy_pass http://10.100.2.106:9003;
            }
    }	
}

